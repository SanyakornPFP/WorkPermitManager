@{
	ViewData["Controller"] = "ผู้ดูแลระบบ";
	ViewData["Action"] = "ตำแหน่งงาน";
	ViewData["Icon"] = "tag";
}
@using ContainerEvaluationSystem.Helpers;
<div class="page-body">
	<!-- Container-fluid starts-->
	<div class="container-fluid">
		<div class="row" style="display: none" id="showInsert">
			<div class="col-12">
				<div class="card">
					<div class="card-header">
						<a class="btn btn-light" id="createOff" href="#" style="float:right">ยกเลิก</a>
						<h4 id="createHeader"><i class="fa fa-plus"></i> เพิ่ม</h4>
						<h4 id="updateHeader" style="display:none"><i class="fa fa-edit"></i> แก้ไข</h4>
					</div>
					<div class="card-body">
						<div class="row g-3">
							<div class="col-12">
								<div class="card-wrapper border rounded-3 light-card checkbox-checked">
									<form id="myForm" method="post" class="row g-3" action="">
										<div class="col-xxl-12 col-sm-12">
											<input name="MainCategoryID" id="txtMainCategoryID" type="hidden" value="@TempData["MainCategoryID"]">
											<input name="CategoryID" id="txtCategoryID" type="hidden">
											<label class="col-form-label" for="txtCategoryName">ชื่อกลุ่ม</label>
											<input class="form-control" name="CategoryName" id="txtCategoryName" type="text" placeholder="กรุณากรอกชื่อกลุ่ม">
										</div>
										<div class="col-xxl-12 col-sm-12">
											<button class="btn btn-pill btn-primary active" id="createBtn" type="submit" title="btn btn-pill btn-success active">บันทึก</button>
											<button class="btn btn-pill btn-primary active" id="updateBtn" type="submit" title="btn btn-pill btn-info active" style="display: none;">อัพเดท</button>
										</div>
									</form>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-sm-12">
				<div class="card">
					<div class="card-header pb-0 card-no-border">
						<div class="flex justify-end space-x-2" style="float:right">
							<a class="btn btn-light btn-sm" asp-controller="ReferenceData" asp-action="HazardMainCategories">
								<i class="fa fa-chevron-left" aria-hidden="true"></i> ย้อนกลับ
							</a>
							<a class="btn btn-primary btn-sm" id="createOn" href="#">
								<i class="fa fa-plus"></i> เพิ่ม
							</a>
						</div>
						<div class="ribbon ribbon-primary ribbon-clip">
							<i class="fa fa-tag"></i>
							หมวดหมู่การวิเคราะห์อันตราย : @TempData["HazardMainCategoryName"]
						</div>
					</div>
					<div class="card-body">
						<div class="table-responsive theme-scrollbar">
							<table class="display" id="data-source-1" style="width:100%">
								<thead>
									<tr>
										<th>ชื่อหมวดหมู่</th>
										<th>ดำเนินการ</th>
									</tr>
								</thead>
								<tbody>
									@foreach (var item in (List<HazardCategory>)ViewBag.HazardCategoryList)
									{
										<tr>
											<td>@item.CategoryName</td>
											<td>
												<ul class="action">
													<li class="edit"><a href="#" class="editBtn" data-CategoryID="@item.CategoryID"><i class="icon-pencil-alt"></i></a></li>
													<li class="delete"><a href="#" class="deleteBtn" data-CategoryID="@item.CategoryID"><i class="icon-trash"></i></a></li>
												</ul>
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- Container-fluid Ends-->
</div>
@section Scripts {
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			var showInsert = document.getElementById('showInsert');
			var createOn = document.getElementById('createOn');
			var createOff = document.getElementById('createOff');

			// Event listener for "เพิ่ม" button
			createOn.addEventListener('click', function (e) {
				e.preventDefault();
				showInsert.style.display = 'block';  // Show the form
			});

			// Event listener for "ยกเลิกเพิ่ม" button
			createOff.addEventListener('click', function (e) {
				e.preventDefault();
				showInsert.style.display = 'none';  // Hide the form
				// Reset the form fields
				$('#myForm')[0].reset();
				// Hide the OfficeID field and update button
				$('#txtCategoryID').hide();
				$('#updateBtn').hide();
				// Show the create button and header
				$('#createHeader').show();
				$('#updateHeader').hide();
				$('#createBtn').show();
				// Hide the cancel button
				$('#cancelBtn').hide();
			});
		});

		// เพิ่มข้อมูลหมวดหมู่ความเสี่ยง
		document.getElementById('createBtn').addEventListener('click', function (e) {
			e.preventDefault();

			var categoryName = $('#txtCategoryName').val();
			var hazardMainCategoryID = $('#txtMainCategoryID').val();

			if (!categoryName) {
				Swal.fire({
					icon: 'error',
					title: 'กรุณากรอกชื่อกลุ่ม',
					text: 'กรุณากรอกชื่อกลุ่มก่อนดำเนินการต่อ',
				});
				return;
			}


			Swal.fire({
				title: 'คุณแน่ใจหรือไม่?',
				text: "คุณจะไม่สามารถย้อนกลับได้!",
				icon: 'warning',
				showCancelButton: true,
				confirmButtonColor: '#28a745', // Light green
				cancelButtonColor: '#d3d3d3', // Light gray
				confirmButtonText: 'ใช่, บันทึก!',
				cancelButtonText: 'ยกเลิก'
			}).then((result) => {
				if (result.isConfirmed) {
					$.ajax({
						url: '@Url.Action("CreateHazardCategories", "ReferenceData")',
						type: 'POST',
						data: { CategoryName: categoryName, HazardMainCategoryID: hazardMainCategoryID, UserManage: @User.GetLoggedInUserID() },
						success: function (response) {
							console.log('Success response:', response);
							if (response.success == true) {
								Swal.fire(
									'บันทึกแล้ว!',
									'ข้อมูลของคุณถูกบันทึกแล้ว.',
									'success'
								).then((result) => {
									if (result.isConfirmed) {
										window.location.reload();
									}
								});
							} else {
								Swal.fire('ผิดพลาด', response.message, 'error');
							}
						},
						error: function (xhr, textStatus, errorThrown) {
							console.error('Error:', xhr.status, textStatus, errorThrown);
						}
					});
				}
			});
		});

		// แก้ไขข้อมูลหมวดหมู่ความเสี่ยง
		document.querySelectorAll('.editBtn').forEach(function (button) {
			button.addEventListener('click', function (e) {
				e.preventDefault();
				var categoryID = this.getAttribute('data-CategoryID');

				$.ajax({
					url: '@Url.Action("GetHazardCategoryById", "ReferenceData")',
					type: 'GET',
					data: { CategoryID: categoryID },
					success: function (response) {
						if (response.success == false) {
							Swal.fire('ผิดพลาด', response.message, 'error');
						} else {
							$('#showInsert').show();
							$('#txtCategoryID').val(response.categoryID);
							$('#txtCategoryName').val(response.categoryName);
							$('#ddlHazardMainCategories').val(response.mainCategoryID).trigger('change');

							$('#createHeader').hide();
							$('#updateHeader').show();
							$('#createBtn').hide();
							$('#updateBtn').show();
						}
					},
					error: function (xhr, textStatus, errorThrown) {
						console.error('Error:', xhr.status, textStatus, errorThrown);
					}
				});
			});
		});

		// ลบข้อมูลหมวดหมู่ความเสี่ยง
		document.querySelectorAll('.deleteBtn').forEach(function (button) {
			button.addEventListener('click', function (e) {
				e.preventDefault();
				var categoryID = this.getAttribute('data-CategoryID');

				Swal.fire({
					title: 'คุณแน่ใจหรือไม่?',
					text: "คุณจะไม่สามารถย้อนกลับได้!",
					icon: 'warning',
					showCancelButton: true,
					confirmButtonColor: '#d33',
					cancelButtonColor: '#d3d3d3',
					confirmButtonText: 'ใช่, ลบ!',
					cancelButtonText: 'ยกเลิก'
				}).then((result) => {
					if (result.isConfirmed) {
						$.ajax({
							url: '@Url.Action("DeleteHazardCategory", "ReferenceData")',
							type: 'POST',
							data: { CategoryID: categoryID, UserManage: @User.GetLoggedInUserID() },
							success: function (response) {
								if (response.success) {
									Swal.fire(
										'ลบแล้ว!',
										response.message,
										'success'
									).then((result) => {
										if (result.isConfirmed) {
											window.location.reload();
										}
									});
								} else {
									Swal.fire('ผิดพลาด', response.message, 'error');
								}
							},
							error: function (xhr, textStatus, errorThrown) {
								console.error('Error:', xhr.status, textStatus, errorThrown);
							}
						});
					}
				});
			});
		});

		document.getElementById('updateBtn').addEventListener('click', function (e) {
			e.preventDefault();

			var categoryID = $('#txtCategoryID').val();
			var categoryName = $('#txtCategoryName').val();
			var hazardMainCategoryID = $('#txtMainCategoryID').val();

			Swal.fire({
				title: 'คุณแน่ใจหรือไม่?',
				text: "คุณจะไม่สามารถย้อนกลับได้!",
				icon: 'warning',
				showCancelButton: true,
				confirmButtonColor: '#007bff', // Light blue
				cancelButtonColor: '#d3d3d3', // Light gray
				confirmButtonText: 'ใช่, บันทึก!',
				cancelButtonText: 'ยกเลิก'
			}).then((result) => {
				if (result.isConfirmed) {
					// Save the data here
					$.ajax({
						url: '@Url.Action("UpdateHazardCategory", "ReferenceData")', // manually specify the URL
						type: 'POST',
						data: { CategoryID: categoryID, CategoryName: categoryName, HazardMainCategoryID: hazardMainCategoryID, UserManage: @User.GetLoggedInUserID() },
						success: function (response) {
							console.log('Success response:', response); // log success response
							if (response.success == true) {
								Swal.fire(
									'บันทึกแล้ว!',
									'ข้อมูลของคุณถูกบันทึกแล้ว.',
									'success'
								).then((result) => {
									if (result.isConfirmed) {
										window.location.reload();
									}
								})
							} else {
								Swal.fire('ผิดพลาด', response.message, 'error');
							}
						},
						error: function (xhr, textStatus, errorThrown) {
							handleAjaxError(xhr);
						}
					});
				}
			});
		});

	</script>

}